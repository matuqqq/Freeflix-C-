<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VbCCpI9n5a5Mw2DIe5q1QPfe3h6HIo0X11PnK8qjkSxgkWSaG4gCAIAgCAa69MspAYrcbjcQDys/g1hA
        fzK9dr3Onslv3JIS8ygWTgnIvD8Ph6tFUYpU98M7Nm0tr0gEZg/wq4WKmZUqjW9hWcDTXQCZB6JSphRY
        X+JJP1moOTjXCqGKpGlXRXQ2NjfQjZgQQVPmDAKjyT+H9HAYirWSqXLjKmamoKLc3sbm56XsNIBz/iry
        9xDGJTpUDej4i6moEDOCpQnTUCxNu5v0FsPPQysdSrcB/DPH08DjKDVaKnEex8N2YD2bltWAFr7bG0yY
        MuQ+ROKYLF03BRaZutYLVzK6WNrrlFyCQQdDv3IJZMvBeee+TE4hhxSer7Mq4dXFMMQQCCurDQg6i42H
        aDB18ncn4TAUrUtXIAeqffe3fWyjfQaQDt4dwPB08RUxFKgi1nXK1QCxIuCRbYXIF7AXsLwCg81/hU2L
        xVSvVxZ/MYmwS5VeiAsx0Gw0mcAsGI5Epvw0YFsRXNJVQDWnfwsGX+TWxAPwgFZ4J+ERoV6dajjHVqbK
        wPswGsCCVJVhcG1iLagxgHrVFWA8RDHuBb6XmAbIAgCAIAgCAYu1oBzOpJuZsD57OABTtAOim/eYB8xA
        0mAaKFM3+8A24g9JkHPlO3QwDZR0MAyxaE2PSYB8pLoYB8SnY37TIFVcxvMgZdMvSAKa5TcQDoR7zUGc
        AQBAEAQBAMSsAZZkHzLMAZIB9ywAwvAAWAfMkA+ZIAyQD6FgBEtAPuWAfMszkDLGQMkZAywDOYAgCAIA
        gCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIA
        gCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgH/9k=
</value>
  </data>
</root>